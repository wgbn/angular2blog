System.register(["angular2/core","../models","../service/user","../service/login","angular2/router"],function(e,t){"use strict";var n,o,r,i,s,c,u=(t&&t.id,this&&this.__decorate||function(e,t,n,o){var r,i=arguments.length,s=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(s=(i<3?r(s):i>3?r(t,n,s):r(t,n))||s);return i>3&&s&&Object.defineProperty(t,n,s),s}),f=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};return{setters:[function(e){n=e},function(e){o=e},function(e){r=e},function(e){i=e},function(e){s=e}],execute:function(){c=function(){function e(e,t,n){this.userService=e,this.loginService=t,this.router=n,this.user=new o.User,this.showLoading=!1,this.errorMessage=null}return e.prototype.onClick=function(e){var t=this;e.preventDefault(),this.showLoading=!0,this.errorMessage=null,this.userService.insert(this.user).subscribe(function(e){return t.onLoginResult(e)},function(e){return t.onLoginError(e)})},e.prototype.onLoginResult=function(e){console.log(e),this.loginService.setLogin(e.user,e.token),this.router.navigate(["Home"])},e.prototype.onLoginError=function(e){this.showLoading=!1,this.errorMessage=e._body},e=u([n.Component({providers:[r.UserService],templateUrl:"loginComponent.html"}),f("design:paramtypes",[r.UserService,i.LoginService,s.Router])],e)}(),e("LoginComponent",c)}}});
//# sourceMappingURL=data:application/json;base64,
