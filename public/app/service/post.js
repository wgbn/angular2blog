System.register(["angular2/http","angular2/core","rxjs/add/operator/map","../service/header","../service/login"],function(e,t){"use strict";var n,r,i,o,c,s=(t&&t.id,this&&this.__decorate||function(e,t,n,r){var i,o=arguments.length,c=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(c=(o<3?i(c):o>3?i(t,n,c):i(t,n))||c);return o>3&&c&&Object.defineProperty(t,n,c),c}),a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};return{setters:[function(e){n=e},function(e){r=e},function(e){},function(e){i=e},function(e){o=e}],execute:function(){c=function(){function e(e,t,n){this._http=e,this._headerService=t,this._loginService=n}return e.prototype.getPosts=function(){return this._http.get("./api/posts").map(function(e){return e.json()})},e.prototype.insert=function(e){return console.log(e),this._http.post("./api/posts",JSON.stringify(e),this._headerService.getJsonHeaders(this._loginService.getToken())).map(function(e){return e.json()})},e.prototype["delete"]=function(e){return this._http["delete"]("./api/posts/"+e._id,this._headerService.getJsonHeaders(this._loginService.getToken())).map(function(e){return e.json()})},e=s([r.Injectable(),a("design:paramtypes",[n.Http,i.HeadersService,o.LoginService])],e)}(),e("PostService",c)}}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2UvcG9zdC5qcyJdLCJuYW1lcyI6WyJTeXN0ZW0iLCJyZWdpc3RlciIsImV4cG9ydHNfMSIsImNvbnRleHRfMSIsImh0dHBfMSIsImNvcmVfMSIsImhlYWRlcl8xIiwibG9naW5fMSIsIlBvc3RTZXJ2aWNlIiwiX19kZWNvcmF0ZSIsImlkIiwidGhpcyIsImRlY29yYXRvcnMiLCJ0YXJnZXQiLCJrZXkiLCJkZXNjIiwiZCIsImMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJyIiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiUmVmbGVjdCIsImRlY29yYXRlIiwiaSIsImRlZmluZVByb3BlcnR5IiwiX19tZXRhZGF0YSIsImsiLCJ2IiwibWV0YWRhdGEiLCJzZXR0ZXJzIiwiaHR0cF8xXzEiLCJjb3JlXzFfMSIsIl8xIiwiaGVhZGVyXzFfMSIsImxvZ2luXzFfMSIsImV4ZWN1dGUiLCJfaHR0cCIsIl9oZWFkZXJTZXJ2aWNlIiwiX2xvZ2luU2VydmljZSIsInByb3RvdHlwZSIsImdldFBvc3RzIiwiZ2V0IiwibWFwIiwicmVzIiwianNvbiIsImluc2VydCIsInAiLCJjb25zb2xlIiwibG9nIiwicG9zdCIsIkpTT04iLCJzdHJpbmdpZnkiLCJnZXRKc29uSGVhZGVycyIsImdldFRva2VuIiwiX2lkIiwiSW5qZWN0YWJsZSIsIkh0dHAiLCJIZWFkZXJzU2VydmljZSIsIkxvZ2luU2VydmljZSJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU9DLFVBQVUsZ0JBQWlCLGdCQUFpQix3QkFBeUIsb0JBQXFCLG9CQUFxQixTQUFTQyxFQUFXQyxHQUN0SSxZQUNBLElBVUlDLEdBQVFDLEVBQVFDLEVBQVVDLEVBQzFCQyxFQVZBQyxHQURlTixHQUFhQSxFQUFVTyxHQUN4QkMsTUFBUUEsS0FBS0YsWUFBZSxTQUFVRyxFQUFZQyxFQUFRQyxFQUFLQyxHQUM3RSxHQUEySEMsR0FBdkhDLEVBQUlDLFVBQVVDLE9BQVFDLEVBQUlILEVBQUksRUFBSUosRUFBa0IsT0FBVEUsRUFBZ0JBLEVBQU9NLE9BQU9DLHlCQUF5QlQsRUFBUUMsR0FBT0MsQ0FDckgsSUFBdUIsZ0JBQVpRLFVBQW9ELGtCQUFyQkEsU0FBUUMsU0FBeUJKLEVBQUlHLFFBQVFDLFNBQVNaLEVBQVlDLEVBQVFDLEVBQUtDLE9BQ3BILEtBQUssR0FBSVUsR0FBSWIsRUFBV08sT0FBUyxFQUFHTSxHQUFLLEVBQUdBLEtBQVNULEVBQUlKLEVBQVdhLE1BQUlMLEdBQUtILEVBQUksRUFBSUQsRUFBRUksR0FBS0gsRUFBSSxFQUFJRCxFQUFFSCxFQUFRQyxFQUFLTSxHQUFLSixFQUFFSCxFQUFRQyxLQUFTTSxFQUNoSixPQUFPSCxHQUFJLEdBQUtHLEdBQUtDLE9BQU9LLGVBQWViLEVBQVFDLEVBQUtNLEdBQUlBLElBRTVETyxFQUFjaEIsTUFBUUEsS0FBS2dCLFlBQWUsU0FBVUMsRUFBR0MsR0FDdkQsR0FBdUIsZ0JBQVpOLFVBQW9ELGtCQUFyQkEsU0FBUU8sU0FBeUIsTUFBT1AsU0FBUU8sU0FBU0YsRUFBR0MsR0FJMUcsUUFDSUUsU0FDSSxTQUFVQyxHQUNONUIsRUFBUzRCLEdBRWIsU0FBVUMsR0FDTjVCLEVBQVM0QixHQUViLFNBQVVDLEtBQ1YsU0FBVUMsR0FDTjdCLEVBQVc2QixHQUVmLFNBQVVDLEdBQ043QixFQUFVNkIsSUFFbEJDLFFBQVMsV0FDTDdCLEVBQWUsV0FDWCxRQUFTQSxHQUFZOEIsRUFBT0MsRUFBZ0JDLEdBQ3hDN0IsS0FBSzJCLE1BQVFBLEVBQ2IzQixLQUFLNEIsZUFBaUJBLEVBQ3RCNUIsS0FBSzZCLGNBQWdCQSxFQXNCekIsTUFwQkFoQyxHQUFZaUMsVUFBVUMsU0FBVyxXQUM3QixNQUFPL0IsTUFBSzJCLE1BQ1BLLElBQUksZUFDSkMsSUFBSSxTQUFVQyxHQUFPLE1BQU9BLEdBQUlDLFVBRXpDdEMsRUFBWWlDLFVBQVVNLE9BQVMsU0FBVUMsR0FFckMsTUFEQUMsU0FBUUMsSUFBSUYsR0FDTHJDLEtBQUsyQixNQUNQYSxLQUFLLGNBQWVDLEtBQUtDLFVBQVVMLEdBQUlyQyxLQUFLNEIsZUFBZWUsZUFBZTNDLEtBQUs2QixjQUFjZSxhQUM3RlgsSUFBSSxTQUFVQyxHQUFPLE1BQU9BLEdBQUlDLFVBRXpDdEMsRUFBWWlDLFVBQVpqQyxVQUErQixTQUFVd0MsR0FDckMsTUFBT3JDLE1BQUsyQixNQUFMM0IsVUFDSyxlQUFpQnFDLEVBQUVRLElBQUs3QyxLQUFLNEIsZUFBZWUsZUFBZTNDLEtBQUs2QixjQUFjZSxhQUNyRlgsSUFBSSxTQUFVQyxHQUFPLE1BQU9BLEdBQUlDLFVBRXpDdEMsRUFBY0MsR0FDVkosRUFBT29ELGFBQ1A5QixFQUFXLHFCQUFzQnZCLEVBQU9zRCxLQUFNcEQsRUFBU3FELGVBQWdCcEQsRUFBUXFELGdCQUNoRnBELE1BR1BOLEVBQVUsY0FBZU0iLCJmaWxlIjoic2VydmljZS9wb3N0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiU3lzdGVtLnJlZ2lzdGVyKFsnYW5ndWxhcjIvaHR0cCcsICdhbmd1bGFyMi9jb3JlJywgJ3J4anMvYWRkL29wZXJhdG9yL21hcCcsICcuLi9zZXJ2aWNlL2hlYWRlcicsICcuLi9zZXJ2aWNlL2xvZ2luJ10sIGZ1bmN0aW9uKGV4cG9ydHNfMSwgY29udGV4dF8xKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgdmFyIF9fbW9kdWxlTmFtZSA9IGNvbnRleHRfMSAmJiBjb250ZXh0XzEuaWQ7XG4gICAgdmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgICAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgICAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgICAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgICAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xuICAgIH07XG4gICAgdmFyIF9fbWV0YWRhdGEgPSAodGhpcyAmJiB0aGlzLl9fbWV0YWRhdGEpIHx8IGZ1bmN0aW9uIChrLCB2KSB7XG4gICAgICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5tZXRhZGF0YSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gUmVmbGVjdC5tZXRhZGF0YShrLCB2KTtcbiAgICB9O1xuICAgIHZhciBodHRwXzEsIGNvcmVfMSwgaGVhZGVyXzEsIGxvZ2luXzE7XG4gICAgdmFyIFBvc3RTZXJ2aWNlO1xuICAgIHJldHVybiB7XG4gICAgICAgIHNldHRlcnM6W1xuICAgICAgICAgICAgZnVuY3Rpb24gKGh0dHBfMV8xKSB7XG4gICAgICAgICAgICAgICAgaHR0cF8xID0gaHR0cF8xXzE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZnVuY3Rpb24gKGNvcmVfMV8xKSB7XG4gICAgICAgICAgICAgICAgY29yZV8xID0gY29yZV8xXzE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZnVuY3Rpb24gKF8xKSB7fSxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChoZWFkZXJfMV8xKSB7XG4gICAgICAgICAgICAgICAgaGVhZGVyXzEgPSBoZWFkZXJfMV8xO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChsb2dpbl8xXzEpIHtcbiAgICAgICAgICAgICAgICBsb2dpbl8xID0gbG9naW5fMV8xO1xuICAgICAgICAgICAgfV0sXG4gICAgICAgIGV4ZWN1dGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgUG9zdFNlcnZpY2UgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIFBvc3RTZXJ2aWNlKF9odHRwLCBfaGVhZGVyU2VydmljZSwgX2xvZ2luU2VydmljZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9odHRwID0gX2h0dHA7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hlYWRlclNlcnZpY2UgPSBfaGVhZGVyU2VydmljZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbG9naW5TZXJ2aWNlID0gX2xvZ2luU2VydmljZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgUG9zdFNlcnZpY2UucHJvdG90eXBlLmdldFBvc3RzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5faHR0cFxuICAgICAgICAgICAgICAgICAgICAgICAgLmdldCgnLi9hcGkvcG9zdHMnKVxuICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAocmVzKSB7IHJldHVybiByZXMuanNvbigpOyB9KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIFBvc3RTZXJ2aWNlLnByb3RvdHlwZS5pbnNlcnQgPSBmdW5jdGlvbiAocCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhwKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2h0dHBcbiAgICAgICAgICAgICAgICAgICAgICAgIC5wb3N0KCcuL2FwaS9wb3N0cycsIEpTT04uc3RyaW5naWZ5KHApLCB0aGlzLl9oZWFkZXJTZXJ2aWNlLmdldEpzb25IZWFkZXJzKHRoaXMuX2xvZ2luU2VydmljZS5nZXRUb2tlbigpKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHJlcykgeyByZXR1cm4gcmVzLmpzb24oKTsgfSk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBQb3N0U2VydmljZS5wcm90b3R5cGUuZGVsZXRlID0gZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2h0dHBcbiAgICAgICAgICAgICAgICAgICAgICAgIC5kZWxldGUoJy4vYXBpL3Bvc3RzLycgKyBwLl9pZCwgdGhpcy5faGVhZGVyU2VydmljZS5nZXRKc29uSGVhZGVycyh0aGlzLl9sb2dpblNlcnZpY2UuZ2V0VG9rZW4oKSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChyZXMpIHsgcmV0dXJuIHJlcy5qc29uKCk7IH0pO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgUG9zdFNlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgICAgICAgICAgICAgY29yZV8xLkluamVjdGFibGUoKSwgXG4gICAgICAgICAgICAgICAgICAgIF9fbWV0YWRhdGEoJ2Rlc2lnbjpwYXJhbXR5cGVzJywgW2h0dHBfMS5IdHRwLCBoZWFkZXJfMS5IZWFkZXJzU2VydmljZSwgbG9naW5fMS5Mb2dpblNlcnZpY2VdKVxuICAgICAgICAgICAgICAgIF0sIFBvc3RTZXJ2aWNlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gUG9zdFNlcnZpY2U7XG4gICAgICAgICAgICB9KCkpO1xuICAgICAgICAgICAgZXhwb3J0c18xKFwiUG9zdFNlcnZpY2VcIiwgUG9zdFNlcnZpY2UpO1xuICAgICAgICB9XG4gICAgfVxufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
